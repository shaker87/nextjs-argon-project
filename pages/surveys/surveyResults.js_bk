import React, { Component } from "react";
import { Container, Row, Col, Card, CardBody, CardTitle } from "reactstrap";
import Loader from "components/Spinner";
import ErrorMessage from "components/Error";
import { Link } from "next/link";
import CardsHeader from "components/Headers/CardsHeader.js";
import SimpleHeader from "components/Headers/SimpleHeader.js";
import Admin from "layouts/Admin.js";

import { getSurveysByUserId } from "../../api/surveys";

class SurveyResultsPage extends Component {
  state = {
    surveysByUser: [],
    loading: false,
    error: "",
  };

  componentDidMount = async () => {
    const userid = 14;
    this.setState({ ...this.state, loading: true });
    const surveys = await getSurveysByUserId(userid);

    if (surveys && surveys.success) {
      this.setState({
        ...this.state,
        surveysByUser: surveys.data,
        loading: false,
      });
    } else {
      this.setState({
        ...this.state,
        loading: false,
        surveysByUser: [],
        error: "Server Error while fetching surveys. Please Refresh",
      });
    }
  };

  render() {
    const { error, loading, surveysByUser } = this.state;
    if (loading) return <Loader />;
    if (error) return <ErrorMessage errorMessage={error} />;
    if (surveysByUser)
      return (
        <>
          <Container className="mt--12" fluid>
            <Row className="justify-content-center">
              <h1>Survey Results</h1>
            </Row>
            <Row>
              {this.state.surveysByUser.map((survey) => {
                const surveyJSON =
                  survey && survey.surveyresultJSON
                    ? JSON.parse(survey.surveyresultJSON)
                    : "";

                if (surveyJSON)
                  return (
                    <Col md="4">
                      <Card className="bg-gradient-default">
                        <CardBody>
                          <CardTitle className="text-white" tag="h3">
                            {survey.surveyname ? survey.surveyname : ""}
                          </CardTitle>
                          <blockquote className="blockquote text-white mb-0">
                            <p>
                              {survey.surveydescription
                                ? survey.surveydescription
                                : ""}
                            </p>
                            <footer className="blockquote-footer text-danger">
                              {/* <Link href="/about"> */}
                              <a
                                href={`/surveys/surveyResultPage?id=${survey.id}`}
                              >
                                View/Update Survey Results
                              </a>
                              {/* </Link> */}
                            </footer>
                          </blockquote>
                        </CardBody>
                      </Card>
                    </Col>
                  );
              })}
            </Row>
          </Container>
          {/* <SimpleHeader name="Buttons" parentName="Examples" /> */}
          {/* <Container className="mt--6" fluid>
          <Row>Hello</Row>
        </Container> */}
        </>
      );

    return <ErrorMessage errorMessage="No Surveys Found" />;
  }
}

SurveyResultsPage.layout = Admin;

export default SurveyResultsPage;
